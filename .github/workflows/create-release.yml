name: Go

on:
  push:
    tags:
      - 'v*' 

jobs:

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build Linux
      run: env GOOS=linux GOARCH=amd64 go build -o linkExtract-linux .
      
    - name: Build Windows
      run: env GOOS=windows GOARCH=amd64 go build -o linkExtract-windows .
    
    - name: Build OSX
      run: env GOOS=darwin GOARCH=amd64 go build -o linkExtract-osx .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      
    - name: Upload Linux Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./linkExtract-linux
        asset_name: linkExtract
        asset_content_type: application/octet-stream
        
    - name: Upload Windows Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./linkExtract-windows
        asset_name: linkExtract.exe
        asset_content_type: application/octet-stream
    
    - name: Upload OSX Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./linkExtract-osx
        asset_name: linkExtract-osx
        asset_content_type: application/octet-stream